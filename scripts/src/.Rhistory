ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 2)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.5)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif)
p
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
grid.arrange(p, p2, ncol = 2)
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
grid.arrange(p, p2, nrow = 2)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
library(gridExtra)
grid.arrange(p, p2, nrow = 2)
}
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8))
library(gridExtra)
grid.arrange(p, p2, nrow = 2)
}
library(grid)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(1,1,1.5,1.2),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(1,1,1.5,1.2),"cm"))
grid.arrange(p, p2, nrow = 2)
}
library(pheatmap)
help("pheatmap")
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(0.2,0.2,0.2,0.2),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(0.2,0.2,0.2,0.2),"cm"))
grid.arrange(p, p2, nrow = 2)
}
options(width = 500)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank(), legend.background = NULL) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(0.2, 0, 0.2, 0),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm"))
grid.arrange(p, p2, nrow = 2)
}
p
plotly(p)
library(plotly)
ggplotly(p)
ggplotly(p2)
p2
ggplotly(p2)
p2
library(pheatmap)
help("pheatmap")
reticulate::import('louvain')
getwd()
cluster1_fp = '0'
cluster2_fp = '1'
down_dir = '~/yuw1/run_scATAC-pro/PBMC10k/output/downstream_analysis/FILTER'
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
library(viridis)
comp_cls = paste0('cluster_', cluster1_fp, '_cluster_', cluster2_fp)
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
down.dir = down_dir
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
footprint_stats.file
fdir = dirname(footprint_stats.file)
tf.file.name = footprint_stats[which.min(P_values)]$Motif
sele.motif = footprint_stats[which.min(P_values)]$motif
footprint_stats
library(ggrepel)
library(gridExtra)
#  library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
tf.file.name = footprint_stats[which.min(P_values)]$Motif
sele.motif = footprint_stats[which.min(P_values)]$motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
tf.file.name
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd = rbind(dd2, dd1)
dd$cluster = rep(c(paste0('cluster_', cluster2_fp), paste0('cluster_', cluster1_fp)), each = nrow(dd1))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8), plot.title = element_text(size = 15, face = 'bold')) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm")) + scale_color_manual(values = c('#F8766D', '#619CFF'))
p2
cluster2_fp='2'
comp_cls = paste0('cluster_', cluster1_fp, '_cluster_', cluster2_fp)
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
p2
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
sele.motif
p2
tf.file.name = footprint_stats[motif=='Dux']$Motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
dd1
dd2
dd
dd = fread(tf.file.name)
dd
fdir
fdir = dirname(footprint_stats.file)
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
dd
fdir
tf.file.name
tf.file.name = footprint_stats[motif=="Dux"]$Motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd = rbind(dd2, dd1)
dd$cluster = rep(c(paste0('cluster_', cluster2_fp), paste0('cluster_', cluster1_fp)), each = nrow(dd1))
p1 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8), plot.title = element_text(size = 15, face = 'bold')) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm")) + scale_color_manual(values = c('#F8766D', '#619CFF'))
p1
p2
dd
dd = fread(tf.file.name)
dd
tf.file.name
p2
p1
tf.file.name1 = "/home/yuw1/yuw1/run_scATAC-pro/PBMC10k/output/downstream_analysis/FILTER/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/MA0611.1.Dux.txt"
dd0 = fread(tf.file.name1)
dd[, 'id' := -99:100]
dd0[, 'id' := -99:100]
dd1 = rbind(subset(dd0, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd0, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd0
dd1
dd
plot(dd$cluster_0, dd0$cluster_0)
dd0
dd
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
?seqLogo
BiocManager::install('seqLogo')
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
library(seqLogo)
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', 'Tcf3', '.pwm'), header = F)
pwd
pwm
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
library(viridis)
library(chromVAR)
library(BiocParallel)
register(SerialParam())
ss = readRDS('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/')
ss = readRDS('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/seurat_obj.rds')
ss
metaData = ss@meta.data
metaData
down_dir = '~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/'
chromVar.obj = readRDS(paste0(down.dir, '/chromVar_obj.rds'))
down.dir = '~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/'
chromVar.obj = readRDS(paste0(down.dir, '/chromVar_obj.rds'))
# clusters are the data frame with <barcode> <cluster>
do_DA <- function(mtx_score, clusters, test = 'wilcox',
only.pos = T, fdr = 0.05, topn = 10){
clusters$cluster = as.character(clusters$cluster)
cls = unique(clusters$cluster)
res = NULL
features = rownames(mtx_score)
for(cluster0 in cls){
bc0 = clusters[cluster == cluster0]$barcode
mtx1 = mtx_score[, colnames(mtx_score) %in% bc0]
mtx2 = mtx_score[, !colnames(mtx_score) %in% bc0]
mu1 = sapply(1:length(features), function(x) mean(mtx1[x, ]))
mu2 = sapply(1:length(features), function(x) mean(mtx2[x, ]))
pvs = sapply(1:length(features), function(x) wilcox.test(mtx1[x, ], mtx2[x, ])$p.value )
pvs.adj = p.adjust(pvs, method = 'fdr')
res0 = data.table('feature' = features, 'cluster' = cluster0,
'mean1' = mu1, 'mean2' = mu2,
'pv' = pvs, 'pv_adjust' = pvs.adj)
if(only.pos) res0 = res0[mean1 > 0]
res0 = res0[order(pv_adjust), ]
res0 = res0[pv_adjust <= fdr]
if(nrow(res0) > topn) res0 = res0[1:topn, ]
res = rbind(res, res0)
}
return(res)
}
da.res = do_DA(chromVar.obj@assays$data$deviations,
clusters = data.table('barcode' = rownames(metaData),
'cluster' = metaData$active_clusters))
da.res
sele.tfs = da.res$feature
zscores = chromVar.obj@assays$data$z
sele.zscores = zscores[sele.tfs, ]
rnames = rownames(sele.zscores)
nnames = sapply(rnames, function(x) unlist(strsplit(x, '_'))[3])
nnames1 = sapply(rnames, function(x) unlist(strsplit(x, '_'))[1])
rownames(sele.zscores) = ifelse(grepl(nnames, pattern = 'LINE'), nnames1, nnames)
metaData$active_clusters = as.character(metaData$active_clusters)
metaData = data.table(metaData, keep.rownames = T)
setkey(metaData, active_clusters)
sele.zscores = sele.zscores[, metaData$rn]
metaData$rn
dim(ss)
sele.zscores
dim(sele.zscores)
sele.zscores = sele.zscores[, metaData$rn]
rr = metaData$rn[metaData$rn %in% colnames(sele.zscores)]
sele.zscores = sele.zscores[, rr]
dd = chromVar.obj@assays$data$deviations
dd
dim(dd)
rowVars(dd)
ff = fread('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/summary/MLL_882304.MappingStats')
ff = fread('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/summary/MLL_882304.qc_per_barcode.txt')
remove.packages('Suerat')
BiocManager::install('Seurat')
BiocManager::install('Seurat')
BiocManager::install('Seurat')
library(data.table)
library(magrittr)
library(Seurat)
packageVersion('Seurat')
library(ggplot2)
library(readr)
library(chromVAR)
.libPaths()
library(motifmatchr)
library(SummarizedExperiment)
library(BiocParallel)
#library(JASPAR2016)
library(cisTopic)
library(compiler)
BiocManager::install('cisTopic')
BiocManager::install('motifmatchr')
devtools::install_github('qinzhu/VisCello')
#library(JASPAR2016)
library(cisTopic)
devtools::install_github("aertslab/cisTopic")
aa = c('a', 'c', 'd', 'b')
bb = c('a', 'b', 'd', 'c')
match(aa, bb)
aa = c('a', 'c', 'd', 'b', 'a', 'b')
match(aa, bb)
library(VisCello)
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/integrated3MLL')
library(VisCello)
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/integrate_3scRNA_tcell_ifg')
rm(list=ls())
library(VisCello)
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/relate2_seurat_integrated_9scATAC')
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/relate2_seurat_integrated_9scATAC')
# assign gene to nearest peak and mark a gene if its tss within the peak
assignGene2Peak <- function(mtx, gene_ann){
gene_ann[, 'tss' := ifelse(strand == '+', start, end)]
peaks = tidyr::separate(data.table(x=rownames(mtx)),
col = x,
into = c('chr', 'start', 'end'))
peaks$peak_name = rownames(mtx)
class(peaks$start) = 'integer'
class(peaks$end) = 'integer'
geneTssInPeak <- function(tss_ids, genes0){
if(!is.na(tss))
rr = genes0[tss <= end & tss >= start]$gene_name
return(paste(rr, collapse = ','))
}
chrs = unique(peaks$chr)
peaks_ann = NULL
for(chr0 in chrs){
peaks0 = peaks[chr == chr0]
genes0 = gene_ann[chr == chr0]
peaks0[, 'id' := which.min(abs(genes0$tss - start/2 - end/2)), by = 'peak_name']
peaks0[, 'gene_name' := genes0[id, gene_name]]
peaks0$tss_name = ''
for(i in 1:nrow(peaks0)){
tss0 = genes0[tss <= peaks0$end[i] & tss >= peaks0$start[i]]
if(nrow(tss0) >0 ) {
if(peaks0$gene_name[i] %in% tss0$gene_name) peaks0$gene_name[i] <- ''
peaks0$tss_name[i] = paste(paste0(tss0$gene_name, '_Tss'),
collapse = ',')
}
}
peaks_ann = rbind(peaks_ann, peaks0)
}
peaks_ann[, 'id':= NULL]
peaks_ann[, 'peak_new_name' := ifelse(nchar(gene_name) > 1,
paste0(peak_name, ',', gene_name), peak_name)]
peaks_ann[, 'peak_new_name' := ifelse(nchar(tss_name) > 1,
paste0(peak_new_name, ',', tss_name), peak_new_name)]
setkey(peaks_ann, peak_name)
rownames(mtx) = peaks_ann[rownames(mtx)]$peak_new_name
return(mtx)
}
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/relate2_seurat_integrated_9scATAC')
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scRNA/relate2_seurat_integrated_9scRNA_VEG6000/')
help(RunPCA)
library(Seurat)
help(RunPCA)
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/relate2_seurat_integrated_9scATAC_fstat')
cello('/home/yuw1/yuw1/R_work_dir/MLLr/Input4VisCello/scATAC/relate2_seurat_pool_9scATAC_fstat')
library(VisCello)
setwd("~/yuw1/scATAC-pro/scripts/src")
library(Seurat)
seuratPath = '/home/yuw1/yuw1/run_scATAC-pro/PBMC10k/output_new/downstream_analysis/FILTER/seurat_obj.rds'
output_dir = dirname(seuratPath)
output_dir
source('dsAnalysis_utilities.R')
seurat.atac = readRDS(seurat.atac)
rr = rownames(seurat.atac)
sele.features = VariableFeatures(seurat.atac)
rr1 = rr[grepl(rr, pattern = 'Tss')]
sele.features = unique(c(sele.features, rr1))
inputs = prepInput4Cello(seurat.atac@assays$ATAC@counts[rr %in% sele.features, ],
seurat.obj = seurat.atac,
norm_mtx = seurat.atac@assays$ATAC@data[rr %in% sele.features, ],
cello.name = 'scATAC_withGene2Peak',
assay = 'ATAC', extraDims = c(100, 80, 50, 30, 20),
vars.to.regOnPca = 'nCount_ATAC',
vFeatures = NULL)
celloPath = paste0(output_dir, '/VisCello_obj')
system(paste0('mkdir -p ', celloPath))
saveRDS(inputs$eset, file = paste0(celloPath, '/eset.rds'))
saveRDS(inputs$clist, file = paste0(celloPath, '/clist.rds'))
seurat.atac = readRDS(seuratPath)
rr = rownames(seurat.atac)
sele.features = VariableFeatures(seurat.atac)
rr1 = rr[grepl(rr, pattern = 'Tss')]
sele.features = unique(c(sele.features, rr1))
inputs = prepInput4Cello(seurat.atac@assays$ATAC@counts[rr %in% sele.features, ],
seurat.obj = seurat.atac,
norm_mtx = seurat.atac@assays$ATAC@data[rr %in% sele.features, ],
cello.name = 'scATAC_withGene2Peak',
assay = 'ATAC', extraDims = c(100, 80, 50, 30, 20),
vars.to.regOnPca = 'nCount_ATAC',
vFeatures = NULL)
celloPath = paste0(output_dir, '/VisCello_obj')
system(paste0('mkdir -p ', celloPath))
saveRDS(inputs$eset, file = paste0(celloPath, '/eset.rds'))
saveRDS(inputs$clist, file = paste0(celloPath, '/clist.rds'))
library(VisCello)
cello(celloPath)
