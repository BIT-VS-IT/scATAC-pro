p
#ggplotly(p)
library(ggplot2)
library(plotly)
g <- ggplot(data = bc_stat[sample(1:nrow(bc_stat), 15000)], aes(x = total_frags, y = frac_peak, col = group)) + geom_point(size = 0.5) + scale_x_continuous(trans='log10') +
theme(legend.position=c(.9, .9)) +  theme(legend.title=element_blank(),
legend.text = element_text(size=14),
legend.background = NULL,
axis.text = element_text(size = 14),
axis.title = element_text(size = 14)) + xlab('Total #fragments') + ylab('Fraction in Peak')
#ggplotly(g)
g
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1, col = set.cols[1]) +
xlab('Distance to TSS') + ylab('TSS enrichment score(bp)') + theme(legend.title=element_blank(), axis.text = element_text(size = 14), axis.title = element_text(size = 14))
frags[, 'isize' := end - start]
frags = frags[sample(1:nrow(frags), 1000000), ]
p1 <- ggplot(data = frags[isize < 800], aes(x = isize)) +
geom_density() + xlab('insert size')
p1
p1 <- ggplot(data = frags[isize < 800], aes(x = isize)) +
geom_density() + xlab('insert size') + theme(legend.title=element_blank(),
legend.text = element_text(size=14),
legend.background = NULL,
axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
p1
ggplotly(p1)
p1
p
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
p
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_label_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
qc_sele_df = data.table(frac = c(qc_sele$frac_peak, qc_sele$frac_tss, qc_sele$frac_promoter, qc_sele$frac_enh, qc_sele$frac_mito), 'type' = rep(c('Peaks', 'Tss', 'Promoter', 'Enhancer', 'Mito'), each = nrow(qc_sele)))
p0 <- ggplot(data = qc_sele_df, aes(y = frac, x = type, fill = type)) + ylab('Fraction') +
geom_boxplot(outlier.size = 0.01) +  theme(legend.position = 'none', axis.text = element_text(size = 15), axis.title = element_blank(size = 15)) + xlab('')
p0 <- ggplot(data = qc_sele_df, aes(y = frac, x = type, fill = type)) + ylab('Fraction') +
geom_boxplot(outlier.size = 0.01) +  theme(legend.position = 'none', axis.text = element_text(size = 15), axis.title = element_blank()) + xlab('')
p0
p0 <- ggplot(data = qc_sele_df, aes(y = frac, x = type, fill = type)) + ylab('Fraction') +
geom_boxplot(outlier.size = 0.01) +  theme(legend.position = 'none', axis.text = element_text(size = 15), axis.title.x = element_blank(), axis.title.y = element_text(size = 15)) + xlab('')
p0
tss.mat = fread('~/yuw1/run_scATAC-pro/output/downstream_analysis/EmptyDrop/data_by_cluster/footprint/JUND_signal.mtx.gz')
tss.mat = tss.mat[, -c(1:6)]
tss.mat[is.na(tss.mat)] = 0
tss.escore = colSums(tss.mat)
ma <- function(x, n = 10){stats::filter(x, rep(1 / n, n), sides = 2)}
dim(tss.escore)
length(tss.escore)
dim(tss.mat)
plot(tss.escore)
library(VisCello)
cello("/mnt/isilon/tan_lab/yuw1/R_work_dir/CPTCA/Pilot/Leukemia_out/integrated_scRNA_inputs4Cello")
dd = fread('/home/yuw1/yuw1/run_scATAC-pro/output/downstream_analysis/EmptyDrop/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/MA0018.3.CREB1.txt')
dd
plot(dd$cluster_1)
plot(dd$cluster_1, type = 'l')
lines(dd$cluster_0, col = 2)
dd = fread('/home/yuw1/yuw1/run_scATAC-pro/output/downstream_analysis/EmptyDrop/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/*JUND.txt')
dd = fread('/home/yuw1/yuw1/run_scATAC-pro/output/downstream_analysis/EmptyDrop/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/MA0491.1.JUND.txt')
plot(dd$cluster_1, type = 'l')
lines(dd$cluster_0, col = 2)
plot(dd$cluster_0, type = 'l')
lines(dd$cluster_1, col = 2)
range(dd$cluster_1)
footprint_stats[isSig == 'Diff']
tf.file.name = footprint_stats[motif == sele.motif]$Motif
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
nrow(dd)
dd
dd[, 'id' := -99:100]
dd
dd0 = rbind(subset(dd, select = - cluster_1))
dd0
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
dd
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line()
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(linetype = cluster)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster))
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 2)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.5)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif)
p
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif)
ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
grid.arrange(p, p2, ncol = 2)
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
grid.arrange(p, p2, nrow = 2)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif')
library(gridExtra)
grid.arrange(p, p2, nrow = 2)
}
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10)
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8))
library(gridExtra)
grid.arrange(p, p2, nrow = 2)
}
library(grid)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(1,1,1.5,1.2),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(1,1,1.5,1.2),"cm"))
grid.arrange(p, p2, nrow = 2)
}
library(pheatmap)
help("pheatmap")
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank()) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(0.2,0.2,0.2,0.2),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(0.2,0.2,0.2,0.2),"cm"))
grid.arrange(p, p2, nrow = 2)
}
options(width = 500)
footprint_stats.file = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/cluster_0_cluster_1_statistics.txt')
if(file.exists(footprint_stats.file)){
library(ggrepel)
library(gridExtra)
library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
footprint_stats[, 'isSig' := ifelse(P_values <= 0.05, 'Diff', 'non-Diff')]
p <- ggplot(data = footprint_stats, aes(x = motif, y = TF_Activity, colour = factor(isSig), label = motif)) + geom_point() + xlab("") + ylab('TF Activity Difference') + theme(legend.position=c(.26, .9),  legend.text = element_text(size=15), axis.text.x = element_blank(), legend.title = element_blank(), legend.background = NULL) + ggtitle('TF Activity difference: Cluster1 - Cluster0') + geom_text_repel(data = subset(footprint_stats, isSig == 'Diff'),
force = 10) + theme(plot.margin=unit(c(0.2, 0, 0.2, 0),"cm"))
p
#select a TF to show
sele.motif = 'CEBPE'
tf.file.name = footprint_stats[motif == sele.motif]$Motif
tf.file.name = paste0(params$downstream_dir, '/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd0 = rbind(subset(dd, select = - cluster_1))
dd1 = rbind(subset(dd, select = - cluster_0))
names(dd0)[1] = names(dd1)[1] = 'score'
dd = rbind(dd1, dd0)
dd$cluster = rep(c('cluster_1', 'cluster_0'), each = nrow(dd0))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8)) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm"))
grid.arrange(p, p2, nrow = 2)
}
p
plotly(p)
library(plotly)
ggplotly(p)
ggplotly(p2)
p2
ggplotly(p2)
p2
library(pheatmap)
help("pheatmap")
reticulate::import('louvain')
getwd()
cluster1_fp = '0'
cluster2_fp = '1'
down_dir = '~/yuw1/run_scATAC-pro/PBMC10k/output/downstream_analysis/FILTER'
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
library(viridis)
comp_cls = paste0('cluster_', cluster1_fp, '_cluster_', cluster2_fp)
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
down.dir = down_dir
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
footprint_stats.file
fdir = dirname(footprint_stats.file)
tf.file.name = footprint_stats[which.min(P_values)]$Motif
sele.motif = footprint_stats[which.min(P_values)]$motif
footprint_stats
library(ggrepel)
library(gridExtra)
#  library(grid)
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
tf.file.name = footprint_stats[which.min(P_values)]$Motif
sele.motif = footprint_stats[which.min(P_values)]$motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
tf.file.name
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd = rbind(dd2, dd1)
dd$cluster = rep(c(paste0('cluster_', cluster2_fp), paste0('cluster_', cluster1_fp)), each = nrow(dd1))
p2 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8), plot.title = element_text(size = 15, face = 'bold')) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm")) + scale_color_manual(values = c('#F8766D', '#619CFF'))
p2
cluster2_fp='2'
comp_cls = paste0('cluster_', cluster1_fp, '_cluster_', cluster2_fp)
footprint_stats.file = paste0(down.dir, '/data_by_cluster/footprint/', comp_cls, '/', comp_cls, '_statistics.txt')
p2
footprint_stats = fread(footprint_stats.file)
footprint_stats[, 'motif1' := unlist(strsplit(Motif, '.', fixed = T))[3], by = Motif]
footprint_stats[, 'motif2' := unlist(strsplit(Motif, '.', fixed = T))[4], by = Motif]
footprint_stats[, 'motif2' := ifelse(is.na(motif2), "", motif2)]
footprint_stats[, 'motif' := paste0(motif1, motif2)]
footprint_stats[, c('motif1', 'motif2') := NULL]
sele.motif
p2
tf.file.name = footprint_stats[motif=='Dux']$Motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
dd1
dd2
dd
dd = fread(tf.file.name)
dd
fdir
fdir = dirname(footprint_stats.file)
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
dd
fdir
tf.file.name
tf.file.name = footprint_stats[motif=="Dux"]$Motif
tf.file.name = paste0(fdir, '/Lineplots/', tf.file.name, '.txt')
dd = fread(tf.file.name)
dd[, 'id' := -99:100]
dd1 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd = rbind(dd2, dd1)
dd$cluster = rep(c(paste0('cluster_', cluster2_fp), paste0('cluster_', cluster1_fp)), each = nrow(dd1))
p1 = ggplot(data = dd, aes(x = id, y = score, colour = cluster)) + geom_line(aes(linetype = cluster), size = 1.1) + ggtitle(sele.motif) + xlab('Distance to Motif') + theme(legend.title=element_blank(), legend.text = element_text(size=15), legend.background = NULL, axis.text = element_text(size = 15), axis.title = element_text(size = 15), legend.position = c(0.8, 0.8), plot.title = element_text(size = 15, face = 'bold')) + theme(plot.margin=unit(c(0.2,0,0.2,0),"cm")) + scale_color_manual(values = c('#F8766D', '#619CFF'))
p1
p2
dd
dd = fread(tf.file.name)
dd
tf.file.name
p2
p1
tf.file.name1 = "/home/yuw1/yuw1/run_scATAC-pro/PBMC10k/output/downstream_analysis/FILTER/data_by_cluster/footprint/cluster_0_cluster_1/Lineplots/MA0611.1.Dux.txt"
dd0 = fread(tf.file.name1)
dd[, 'id' := -99:100]
dd0[, 'id' := -99:100]
dd1 = rbind(subset(dd0, select = c('id', paste0('cluster_', cluster1_fp))))
dd2 = rbind(subset(dd0, select = c('id', paste0('cluster_', cluster2_fp))))
names(dd1)[2] = names(dd2)[2] = 'score'
dd0
dd1
dd
plot(dd$cluster_0, dd0$cluster_0)
dd0
dd
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
?seqLogo
BiocManager::install('seqLogo')
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
library(seqLogo)
plot_motif_logo <- function(tf){
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = t(pwm[, -5])
rownames(pwm) = c('A', 'C', 'G', 'T')
seqLogo(pwm)
return(sum(makePWM(pwm)@ic))
}
plot_motif_logo('Tcf3')
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', tf, '.pwm'), header = F)
pwm = read.delim(paste0('/mnt/isilon/cbmi/tan_lab/yuw1/FIMO/PWM_simp/', 'Tcf3', '.pwm'), header = F)
pwd
pwm
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
library(viridis)
library(chromVAR)
library(BiocParallel)
register(SerialParam())
ss = readRDS('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/')
ss = readRDS('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/seurat_obj.rds')
ss
metaData = ss@meta.data
metaData
down_dir = '~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/'
chromVar.obj = readRDS(paste0(down.dir, '/chromVar_obj.rds'))
down.dir = '~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/downstream_analysis/FILTER/'
chromVar.obj = readRDS(paste0(down.dir, '/chromVar_obj.rds'))
# clusters are the data frame with <barcode> <cluster>
do_DA <- function(mtx_score, clusters, test = 'wilcox',
only.pos = T, fdr = 0.05, topn = 10){
clusters$cluster = as.character(clusters$cluster)
cls = unique(clusters$cluster)
res = NULL
features = rownames(mtx_score)
for(cluster0 in cls){
bc0 = clusters[cluster == cluster0]$barcode
mtx1 = mtx_score[, colnames(mtx_score) %in% bc0]
mtx2 = mtx_score[, !colnames(mtx_score) %in% bc0]
mu1 = sapply(1:length(features), function(x) mean(mtx1[x, ]))
mu2 = sapply(1:length(features), function(x) mean(mtx2[x, ]))
pvs = sapply(1:length(features), function(x) wilcox.test(mtx1[x, ], mtx2[x, ])$p.value )
pvs.adj = p.adjust(pvs, method = 'fdr')
res0 = data.table('feature' = features, 'cluster' = cluster0,
'mean1' = mu1, 'mean2' = mu2,
'pv' = pvs, 'pv_adjust' = pvs.adj)
if(only.pos) res0 = res0[mean1 > 0]
res0 = res0[order(pv_adjust), ]
res0 = res0[pv_adjust <= fdr]
if(nrow(res0) > topn) res0 = res0[1:topn, ]
res = rbind(res, res0)
}
return(res)
}
da.res = do_DA(chromVar.obj@assays$data$deviations,
clusters = data.table('barcode' = rownames(metaData),
'cluster' = metaData$active_clusters))
da.res
sele.tfs = da.res$feature
zscores = chromVar.obj@assays$data$z
sele.zscores = zscores[sele.tfs, ]
rnames = rownames(sele.zscores)
nnames = sapply(rnames, function(x) unlist(strsplit(x, '_'))[3])
nnames1 = sapply(rnames, function(x) unlist(strsplit(x, '_'))[1])
rownames(sele.zscores) = ifelse(grepl(nnames, pattern = 'LINE'), nnames1, nnames)
metaData$active_clusters = as.character(metaData$active_clusters)
metaData = data.table(metaData, keep.rownames = T)
setkey(metaData, active_clusters)
sele.zscores = sele.zscores[, metaData$rn]
metaData$rn
dim(ss)
sele.zscores
dim(sele.zscores)
sele.zscores = sele.zscores[, metaData$rn]
rr = metaData$rn[metaData$rn %in% colnames(sele.zscores)]
sele.zscores = sele.zscores[, rr]
dd = chromVar.obj@assays$data$deviations
dd
dim(dd)
rowVars(dd)
ff = fread('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/summary/MLL_882304.MappingStats')
ff = fread('~/yuw1/run_scATAC-pro/MLLr/MLL_882304/output/summary/MLL_882304.qc_per_barcode.txt')
setwd("/mnt/isilon/tan_lab/yuw1/scATAC-pro/scripts/src")
s1 = readRDS('~/yuw1/run_scATAC-pro/MLLr/Integrate3Sample/output/integrated/filtered_matrix/MLL_879583/FILTER/seurat_obj.rds')
s2 = readRDS('~/yuw1/run_scATAC-pro/MLLr/Integrate3Sample/output/integrated/filtered_matrix/MLL_881823/FILTER/seurat_obj.rds')
s3 = readRDS('~/yuw1/run_scATAC-pro/MLLr/Integrate3Sample/output/integrated/filtered_matrix/MLL_882304/FILTER/seurat_obj.rds')
library(Seurat)
seu.all = list()
seu.all[[1]] = s1
seu.all[[2]] = s2
seu.all[[3]] = s3
features <- SelectIntegrationFeatures(object.list = seu.all, nfeatures = 6000)
seu.all <- PrepSCTIntegration(object.list = seu.all, anchor.features = pbmc.features)
length(features)
help("FindIntegrationAnchors")
seu.all <- PrepSCTIntegration(object.list = seu.all, anchor.features = 6000)
seu.anchors <- FindIntegrationAnchors(object.list = seu.all, anchor.features = 6000)
seu.all <- IntegrateData(anchorset = seu.anchors, dims = 1:30)
DefaultAssay(seu.all) <- "integrated"
seu.all <- ScaleData(seu.all, verbose = FALSE)
seu.all <- RunPCA(seu.all, npcs = 30, verbose = FALSE)
seu.all <- RunUMAP(seu.all, reduction = "pca", dims = 1:30)
DimPlot(seu.all, reduction = "umap", group.by = "sample")
dim(seu.all)
seu.all
FeaturePlot(seu.all, features = 'nCount_ATAC')
source('dsAnalysis_utilities.R')
seu.all <- regress_on_pca(seu.all)
seu.all <- RunUMAP(seu.all, reduction = "pca", dims = 1:30)
DimPlot(seu.all, reduction = "umap", group.by = "sample")
seu.all <- ScaleData(seu.all, verbose = FALSE, vars.to.regress = 'nCount_ATAC')
DefaultAssay(seu.all) <- "integrated"
help("ScaleData")
seu.all <- ScaleData(seu.all, verbose = FALSE, vars.to.regress = 'nCount_ATAC',
features = VariableFeatures(seu.all))
seu.all <- ScaleData(seu.all, verbose = FALSE, vars.to.regress = 'nCount_ATAC',
features = VariableFeatures(seu.all), assay = "integrated")
seu.all <- NormalizeData(seu.all)
rm(list=ls())
