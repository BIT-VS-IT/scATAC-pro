library(data.table)
dd = fread('/mnt/isilon/tan_lab/yuw1/R_work_dir/LiMACC_Dev/HiChIP_H3K27ac/NaiveCD4T/PMID27863249_PCHiC_peak_matrix_cutoff5.tsv')
dd
dd[naCD4 >=5]
dd[naCD4 >5]
dd1 = dd[naCD4 >5]
dd1[baitChr ==oeChr]
dd2 = fread('/home/yuw1/Downloads/DATA_S1/PMID27863249_PCHiC_vs_rCHiC_peak_matrix.tsv')
dd2
getwd()
library(slingshot)
library(monocle)
help("reduceDimension")
getwd*
()
getwd()
BiocManager::install("SC3", version = "3.8")
#devtools::install_github(repo = 'satijalab/seurat', ref = 'release/3.0')
library(Seurat)
packageVersion('Seurat')
install.packages("rjags")
library(rjags)
library(Seurat)
library(Biobase)
library(irlba)
mtx = fread('/mnt/isilon/tan_lab/uzuny/projects/cptca/pilot/dna_met/data/hg19/matrix/leuk/bin_size_100k/combined.rate_CG.whole_genome.good_quality.bed.txt')
library(data.table)
mtx = fread('/mnt/isilon/tan_lab/uzuny/projects/cptca/pilot/dna_met/data/hg19/matrix/leuk/bin_size_100k/combined.rate_CG.whole_genome.good_quality.bed.txt')
dim(mtx)
getwd()
class(mtx)
rownames(mtx)[1:10]
colnames(mtx)
mtx = read.table('/mnt/isilon/tan_lab/uzuny/projects/cptca/pilot/dna_met/data/hg19/matrix/leuk/bin_size_100k/combined.rate_CG.whole_genome.good_quality.bed.txt')
class(mtx)
rownames(mtx)
mtx[,1]
mtx[1,]
library(Seurat)
seurat.obj = readRDS('~/yuw1/run_scATAC-pro/output/downstream_analysis/seurat_obj_withCluster.rds')
seurat.obj = RunUMAP(seurat.obj, dims = 1:50, verbose = F)
saveRDS(seurat.obj,'~/yuw1/run_scATAC-pro/output/downstream_analysis/seurat_obj_withCluster.rds')
tss.escore = readRDS('~/yuw1/run_scATAC-pro/output/signal/tss_enrichScore_vector.rds')
tss.escore
tss.escore = tss.escore[!is.na(tss.escore)]
tss.escore
plot(escore)
plot(tss.escore, type = 'l')
plot(tss.escore[1:200], type = 'l')
plot(tss.escore[1:200], type = 'l', lwd = 2)
plot(tss.escore[1:200]/tss.escore[1], type = 'l', lwd = 2)
tss_escore_file= '~/yuw1/run_scATAC-pro/output/signal/ss.bwa.dedup.paired.MAPQ30.bam.mtx'
tss.mat = fread(tss_escore_file)
library(data.table)
tss.mat = fread(tss_escore_file)
dim(tss.mat)
library(flexdashboard)
library(data.table)
library(magrittr)
library(kableExtra)
library(RColorBrewer)
library(ggplot2)
library(plotly)
tss.mat = tss.mat[, -c(1:6)]
tss.mat
tss.mat[is.na(tss.mat)] = 0
tss.escore = colSums(tss.mat)
ma <- function(x, n = 10){filter(x, rep(1 / n, n), sides = 2)}
tss.escore = ma(tss.escore)
tss.escore
tss.escore = ma(tss.escore)
ma <- function(x, n = 10){stats::filter(x, rep(1 / n, n), sides = 2)}
tss.escore = ma(tss.escore)
tss.escore
tss.escore = tss.escore[14:213]
plot(tss.escore, type='l')
length(tss.escore)
df = data.table(index = 1:200, escore = tss.escore/tss.escore[1])
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 2)
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1)
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1, col=2)
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1, col = set.cols[1])
set.cols = brewer.pal(n=5, name = 'Dark2')
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1, col = set.cols[1])
df = data.table(index = 10*(-100:99), escore = tss.escore/tss.escore[1])
ggplot(data = df, aes(x = index, y = escore)) + geom_line(size = 1, col = set.cols[1])
g <- ggplot(data = bc_stat[sample(1:nrow(bc_stat), 15000)], aes(x = total_frags, y = frac_peak,
col = group)) + geom_point(size = 0.5) + scale_x_continuous(trans='log10') +
theme(legend.position=c(.9, .9)) +  theme(legend.title=element_blank())
108/174
cg <- DimPlot(ss, label = T, reduction = 'umap')
cg
seuratObj_file='~/yuw1/run_scATAC-pro/output/downstream_analysis/seurat_obj_withCluster.rds'
library(Seurat)
ss = readRDS(seuratObj_file)
fg <- FeaturePlot(ss, features = 'cluster_chromVAR', reduction = 'umap') + ggtitle('')
DimPlot(ss, group.by = 'cluster_chromVAR', reduction = 'umap') + ggtitle('')
names(ss@meta.data)
setwd("/mnt/isilon/tan_lab/yuw1/scATAC-pro/scripts")
mtx_file=paste0('~/yuw1/run_scATAC-pro/', 'output/filtered_matrix/FILTER/matrix.mtx')
source('dsAnalysis_utilities.R')
mtx = read_mtx_scATACpro(mtx_file)
genomeName = 'BSgenome.Hsapiens.UCSC.hg38'
obj = run_chromVAR(mtx, genomeName)
mtx
ncore = 3
register(MulticoreParam(3))
peaks = data.table('x' = rownames(mtx))
peaks = tidyr::separate(peaks, col = 'x', into = c('chr', 'start', 'end'))
peaks
mtx
rs = Matrix::rowSums(mtx)
rs
summary(rs)
length(rs <=100)
length(which(rs <=100))
length(which(rs <=40))
mtx0 = mtx[which(rs<=40), ]
dim(mtx0)
mtx0 = mtx[which(rs>40), ]
dim(mtx0)
obj = run_chromVAR(mtx0, genomeName)
mtx = mtx0
peaks = data.table('x' = rownames(mtx))
peaks = tidyr::separate(peaks, col = 'x', into = c('chr', 'start', 'end'))
peaks
rs[1]
rs[1:10]
aa = grepl(rownames(mtx), pattern = 'random')
aa
length(which(aa))
mtx = mtx[!aa, ]
peaks = data.table('x' = rownames(mtx))
peaks = tidyr::separate(peaks, col = 'x', into = c('chr', 'start', 'end'))
peaks
peaks = data.table('x' = rownames(mtx))
peaks = tidyr::separate(peaks, col = 'x', into = c('chr', 'start', 'end'), sep = '-')
peaks
ncore = detectCores()
ncore
